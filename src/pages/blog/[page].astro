---
import BlogLayout from '../../layouts/BlogLayout.astro';
import PostCard from '../../components/PostCard.astro';
import PaginationNav from '../../components/PaginationNav.astro';
import { getCategories } from '../../utils/getCategories';
import CategoryCard from '../../components/CategoryCard.astro';

const categoryList = getCategories();

interface Frontmatter {
  title: string;
  date: string;
  description: string;
  image?: { src: string; alt: string };
  draft?: boolean;
  author?: string;
}

interface PostModule {
  frontmatter: Frontmatter;
}

type Post = Frontmatter & {
  slug: string;
  displayDate: string;
};

// ✅ Get posts inside getStaticPaths to avoid scoping errors
export function getStaticPaths({ paginate }: { paginate: <T>(data: T[], opts: { pageSize: number }) => any[] }) {
  const locale = 'en-US';
  const formatDate = (d: string) => {
    const [month, day, year] = d.split('-').map(Number);
    const parsedDate = new Date(year, month - 1, day);

    return parsedDate.toLocaleDateString(locale, {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      timeZone: 'UTC', // Optional — forces consistent rendering at build time
    });
  };

  const modules = import.meta.glob<PostModule>('./*.md', { eager: true });

  const posts: Post[] = Object.entries(modules)
    .map(([path, mod]) => {
      const slug = path.match(/\.\/(.+)\.md$/)?.[1]!;
      const { title, date, description, image, draft, author } = mod.frontmatter;
      return {
        slug,
        title,
        date,
        description,
        image,
        draft,
        displayDate: formatDate(date),
        author,
      };
    })
    .filter((p) => !p.draft)
    .sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());

  return paginate(posts, { pageSize: 5 });
}

// ✅ Page props inferred from Astro.props
const page = Astro.props.page as {
  data: Post[];
  currentPage: number;
  lastPage: number;
  url: {
    current: string;
    prev?: string;
    next?: string;
  };
};
---

<BlogLayout>
  <div slot="heading" class="card text-center mb-10">
    <h1 class="text-4xl font-bold text-[var(--color-text-primary)]">Whispers From the Hive</h1>
  </div>

  {page.data.map((post) => (
    <PostCard post={post} />
  ))}

  <Fragment slot="sidebar">
    <CategoryCard categoryList={categoryList} />
  </Fragment>

  <Fragment slot="pagination">
    <PaginationNav
      url={page.url}
      currentPage={page.currentPage}
      lastPage={page.lastPage}
    />
  </Fragment>
</BlogLayout>
