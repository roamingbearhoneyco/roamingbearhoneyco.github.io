---
const subscriptionTiers = ["Cub", "Bear", "Grizzly"];
const billingFrequencies = ["Monthly", "6 Months", "Yearly"];
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <form id="signup-form" novalidate>
    <h2 class="form-title">Join the Hive</h2>
    <div class="form-group">
      <label for="name">Name<span class="required">*</span></label>
      <input type="text" id="name" name="name" required autocomplete="name" />
      <span class="error-message" id="name-error"></span>
    </div>
    <div class="form-group">
      <label for="email">Email<span class="required">*</span></label>
      <input type="email" id="email" name="email" required autocomplete="email" />
      <span class="error-message" id="email-error"></span>
    </div>
    <div class="form-group">
      <label for="address">Shipping Address<span class="required">*</span></label>
      <textarea id="address" name="address" rows="3" required autocomplete="street-address"></textarea>
      <span class="error-message" id="address-error"></span>
    </div>
    <div class="form-group">
      <label for="tier">Subscription Tier<span class="required">*</span></label>
      <select id="tier" name="tier" required>
        <option value="">Select a tier</option>
        {subscriptionTiers.map(tier => <option value={tier}>{tier}</option>)}
      </select>
      <span class="error-message" id="tier-error"></span>
    </div>
    <div class="form-group">
      <label for="billing">Billing Frequency<span class="required">*</span></label>
      <select id="billing" name="billing" required>
        <option value="">Select frequency</option>
        {billingFrequencies.map(freq => <option value={freq}>{freq}</option>)}
      </select>
      <span class="error-message" id="billing-error"></span>
    </div>
    <button type="submit" class="submit-btn">Sign Up</button>
    <div id="form-success" class="success-message" style="display:none;">Thank you for joining! üêªüçØ</div>
  </form>

  <script type="module">
    const form = document.getElementById('signup-form');
    const fields = ['name', 'email', 'address', 'tier', 'billing'];
    const errorMessages = {
      name: "Please enter your name.",
      email: "Please enter a valid email.",
      address: "Please enter your shipping address.",
      tier: "Please select a subscription tier.",
      billing: "Please select a billing frequency."
    };

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      let valid = true;
      fields.forEach(field => {
        const input = form[field];
        const error = document.getElementById(field + '-error');
        if (!input.value.trim() || (field === 'email' && !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(input.value))) {
          error.textContent = errorMessages[field];
          input.classList.add('input-error');
          valid = false;
        } else {
          error.textContent = '';
          input.classList.remove('input-error');
        }
      });
      if (valid) {
        const data = {};
        fields.forEach(f => data[f] = form[f].value.trim());
        console.log('Signup Data:', data);
        form.reset();
        document.getElementById('form-success').style.display = 'block';
        setTimeout(() => {
          document.getElementById('form-success').style.display = 'none';
        }, 3500);
      }
    });

    fields.forEach(field => {
      form[field].addEventListener('input', () => {
        const error = document.getElementById(field + '-error');
        if (form[field].value.trim()) {
          error.textContent = '';
          form[field].classList.remove('input-error');
        }
      });
    });
  </script>

  <style scoped>
  form {
    background: #fff8ef;
    border-radius: 1.25rem;
    box-shadow: 0 4px 24px 0 rgba(44,28,15,0.08);
    max-width: 420px;
    margin: 2rem auto;
    padding: 2rem 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    border: 1px solid #f5e7d0;
  }
  .form-title {
    font-size: 2rem;
    font-weight: 700;
    color: #a05d35;
    text-align: center;
    margin-bottom: 0.5rem;
    letter-spacing: -0.5px;
  }
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  label {
    font-weight: 600;
    color: #3e2e1d;
    margin-bottom: 0.1rem;
  }
  .required {
    color: #d97706;
    margin-left: 0.2em;
  }
  input, select, textarea {
    border: 1.5px solid #e2c79e;
    border-radius: 0.75rem;
    padding: 0.75rem 1rem;
    font-size: 1rem;
    background: #fff;
    color: #2c1c0f;
    transition: border-color 0.2s;
    outline: none;
  }
  input:focus, select:focus, textarea:focus {
    border-color: #a05d35;
    background: #fff8ef;
  }
  .input-error {
    border-color: #d97706 !important;
    background: #fff7e6;
  }
  .error-message {
    color: #d97706;
    font-size: 0.95em;
    min-height: 1.2em;
  }
  .success-message {
    color: #388e3c;
    background: #f5e7d0;
    border-radius: 0.75rem;
    padding: 0.75rem 1rem;
    margin-top: 1rem;
    text-align: center;
    font-weight: 600;
    font-size: 1.1em;
  }
  .submit-btn {
    background: linear-gradient(90deg, #d7af79 0%, #a05d35 100%);
    color: #fff;
    font-weight: 700;
    font-size: 1.1rem;
    border: none;
    border-radius: 0.75rem;
    padding: 0.85rem 0;
    margin-top: 0.5rem;
    cursor: pointer;
    transition: background 0.2s, transform 0.1s;
    box-shadow: 0 2px 8px 0 rgba(160,93,53,0.08);
  }
  .submit-btn:hover, .submit-btn:focus {
    background: linear-gradient(90deg, #a05d35 0%, #d7af79 100%);
    transform: scale(1.03);
  }
  @media (max-width: 600px) {
    form {
      padding: 1.2rem 0.5rem;
      max-width: 98vw;
    }
    .form-title {
      font-size: 1.4rem;
    }
  }
  </style>
</Layout>